/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-10-20 10:01:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.reply;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class replyView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1632793742027L));
    _jspx_dependants.put("jar:file:/C:/Users/82106/SpringLesson2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springWeb/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/Web/reply/rss.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//로그인하자마자 데이터 출력되도록 (select를 별도로 뺴도 됨)\r\n");
      out.write("ajaxRequest('/Web/ajaxDelete.do',{no:0},'json')\r\n");
      out.write("\r\n");
      out.write("	function ajaxReplyList(v){\r\n");
      out.write("		var temp=\"\";\r\n");
      out.write("		$.each(v,function(index,dom){\r\n");
      out.write("               temp+=\"<div class=\\\"list_cmt\\\">\";\r\n");
      out.write("			   temp+=\"<div class=\\\"reply\"+dom.no+\"\\\">\"; //새로만듦\r\n");
      out.write("               temp+=\"<div class=\\\"cmt_head\\\"></div>\";\r\n");
      out.write("               temp+=\"<div class=\\\"cmt_body\\\">\";\r\n");
      out.write("               temp+=\"<span class=\\\"info_append\\\">\";\r\n");
      out.write("               temp+=\"<span class=\\\"txt_name\\\">\"+dom.id+\"</span>\";\r\n");
      out.write("               temp+=\"<span class=\\\"txt_bar\\\">|</span>\";\r\n");
      out.write("               temp+=\"<span class=\\\"txt_time\\\">\"+dom.regdate+\"</span></span>\";\r\n");
      out.write("               temp+=\"<p class=\\\"txt_desc\\\">\"+dom.contents;\r\n");
      out.write("               temp+=\"</p>\";\r\n");
      out.write("               temp+=\"</div>\";\r\n");
      out.write("               temp+=\"<div class=\\\"cmt_foot\\\">\";\r\n");
      out.write("               temp+=\"<a href=\\\"#none\\\">답글</a><span class=\\\"txt_bar\\\">|</span><a href='javascript:modFun(\"+dom.no+\")'>수정</a><span class=\\\"txt_bar\\\">|</span><a href='javascript:delFun(\"+dom.no+\")'>삭제</a><span class=\\\"txt_bar\\\">|</span><a href=\\\"#none\\\">신고</a>\";\r\n");
      out.write("               temp+=\"</div>\";\r\n");
      out.write("               temp+=\"</div>\";\r\n");
      out.write("               temp+=\"</div>\";\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("		$(\"div#show\").html(temp);\r\n");
      out.write("		$(\"textarea#txnew\").val('');\r\n");
      out.write("		$(\"textarea#txnew\").focus();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function ajaxRequest(url,data,dataType){\r\n");
      out.write("		 $.ajax({\r\n");
      out.write("			   url:url,\r\n");
      out.write("			//루트가 뭔지 모를때 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageConext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("씀. /Web 과 같은것 \r\n");
      out.write("			type:'POST',\r\n");
      out.write("			data:data,\r\n");
      out.write("			dataType:dataType,\r\n");
      out.write("			success:function(v){\r\n");
      out.write("				ajaxReplyList(v); //코드 밖으로 뺌\r\n");
      out.write("			},\r\n");
      out.write("			error:function(e){\r\n");
      out.write("				alert('error'+e);\r\n");
      out.write("			}\r\n");
      out.write("		 }); \r\n");
      out.write("	}\r\n");
      out.write("	//삭제\r\n");
      out.write("	function delFun(no){\r\n");
      out.write("		ajaxRequest('/Web/ajaxDelete.do',{no:no},'json')\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	//수정\r\n");
      out.write("	function modFun(no){\r\n");
      out.write("		$(\"div.reply\"+no).append(\"<jsp\\:include page=\\\"inputReply.jsp\\\"/>\");\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("   $(function(){\r\n");
      out.write("	   //등록 누르면 DB에 입력되고 select해서 뿌려지는것\r\n");
      out.write("	   $(\"input#send\").click(function(){\r\n");
      out.write("		   ajaxRequest('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ajaxReplyInsert.do',$(\"form#ajaxForm\").serialize(),'json')\r\n");
      out.write("	   });\r\n");
      out.write("	   \r\n");
      out.write("	   \r\n");
      out.write("	   \r\n");
      out.write("	   //textarea를 클릭했을 때\r\n");
      out.write("      $(\"textarea.tf_cmt\").focus(function(){\r\n");
      out.write("        $(this).text(''); \r\n");
      out.write("       if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'==null||'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'==''){\r\n");
      out.write("          alert('LoginCheck!');\r\n");
      out.write("          $(this).blur(); //포커스를 이렇게 해야 루트를 돌지 않음\r\n");
      out.write("          document.location.href='/Web/springAjax/basic/signinajax.jsp';\r\n");
      out.write("       }\r\n");
      out.write("      });\r\n");
      out.write("	   //textarea에 입력할 때\r\n");
      out.write("      $(\"textarea.tf_cmt\").keyup(function(){   \r\n");
      out.write("         if($(\"textarea\").val().length>10){\r\n");
      out.write("            alert('10글자만 가능!');\r\n");
      out.write("            $(\"textarea.tf_cmt\").val($(\"textarea.tf_cmt\").val().substring(0,10));\r\n");
      out.write("         }\r\n");
      out.write("        $(\"span.txt_byte\").text($(\"textarea\").val().length);         \r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"cmt_comm\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "inputReply.jsp", out, false);
      out.write("\r\n");
      out.write("   <strong class=\"screen_out\">전체 댓글</strong>\r\n");
      out.write("    <div id=\"show\"></div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
