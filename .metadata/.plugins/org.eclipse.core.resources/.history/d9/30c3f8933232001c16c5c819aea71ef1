<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Mybatis-commit rollback 일일이 해야함-번거로워서 트랜잭션을 만듦.  오라클 정보를 하나의 객체로 -->
	<beans:bean id="database" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"/>
		<beans:property name="username" value="C##APPLE"></beans:property>
		<beans:property name="password" value="1234"></beans:property>
	</beans:bean>
	
	<!-- database를 생성자 안에서 di 
	logFormatter: 오라클 쿼리 날릴 때 로그 서식 정의
	logds: 데이터베이스를 갖고있는 로그. 따라서 아래 sqlSessionFactory에서 ref를 database에서 logds로 변경한다. -->
	<beans:bean id="logds" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<beans:constructor-arg ref="database"></beans:constructor-arg>
		<beans:property name="logFormatter">
		  <beans:bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
		  	<beans:property name="loggingType" value="MULTI_LINE"></beans:property>
		  	<beans:property name="sqlPrefix" value="SQL:"></beans:property>
		  </beans:bean>
		</beans:property>
	</beans:bean>
	
	
	<!--SqlSessionFactoryBean: mybatis 객체생성하는 공장. 쿼리 날리는 xml주소 가지고있음  
	DB객체를 mybatis객체를 가지고 있다-->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="logds"/>
		<beans:property name="configLocation" value="/WEB-INF/Config.xml"></beans:property>
	</beans:bean>
	
	<!-- mybatis를 핸들링하는 트랜잭션. 얘가 mybatis공장을 가지고있어야함
sqlSessionTemplate이 sqlSessionFactory 의존
constructor-arg: 생성자에 객체 주입
-->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg>
		 <beans:ref bean="sqlSessionFactory"/>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
		<beans:property name="maxUploadSize" value="300000000"></beans:property>
	</beans:bean>
	
	<aop:aspectj-autoproxy/>
	
	<context:component-scan base-package="sist.com.Web" />
	<context:component-scan base-package="sist.com.di.basic6" />
	<context:component-scan base-package="sist.com.controller" />
	<context:component-scan base-package="sist.com.dao" />
	<context:component-scan base-package="sist.com.aop.core" />
	
</beans:beans>
